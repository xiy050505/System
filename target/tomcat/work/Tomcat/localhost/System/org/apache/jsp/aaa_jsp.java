/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-02-29 07:43:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class aaa_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        .avatar-uploader .el-upload {\r\n");
      out.write("            border: 1px dashed #d9d9d9;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            position: relative;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .avatar-uploader .el-upload:hover {\r\n");
      out.write("            border-color: #409EFF;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .avatar-uploader-icon {\r\n");
      out.write("            font-size: 28px;\r\n");
      out.write("            color: #8c939d;\r\n");
      out.write("            width: 178px;\r\n");
      out.write("            height: 178px;\r\n");
      out.write("            line-height: 178px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .avatar {\r\n");
      out.write("            width: 178px;\r\n");
      out.write("            height: 178px;\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"app\">\r\n");
      out.write("\r\n");
      out.write("<el-upload\r\n");
      out.write("        class=\"avatar-uploader\"\r\n");
      out.write("        action=\"http://localhost:8080/System/userImgs\"\r\n");
      out.write("        :show-file-list=\"false\"\r\n");
      out.write("        :on-success=\"handleAvatarSuccess\"\r\n");
      out.write("        :before-upload=\"beforeAvatarUpload\">\r\n");
      out.write("    <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\r\n");
      out.write("    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n");
      out.write("</el-upload>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script src=\"js/axios-0.18.0.js\"></script>\r\n");
      out.write("<script src=\"js/vue.js\"></script>\r\n");
      out.write("<script src=\"element-ui/lib/index.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"element-ui/lib/theme-chalk/index.css\">\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    new Vue({\r\n");
      out.write("        el: \"#app\",\r\n");
      out.write("        data() {\r\n");
      out.write("            return {\r\n");
      out.write("                imageUrl: ''\r\n");
      out.write("            };\r\n");
      out.write("        },\r\n");
      out.write("        methods: {\r\n");
      out.write("            handleAvatarSuccess(res, file) {\r\n");
      out.write("                this.imageUrl = URL.createObjectURL(file.raw);\r\n");
      out.write("            },\r\n");
      out.write("            beforeAvatarUpload(file) {\r\n");
      out.write("                const isJPG = file.type === 'image/jpeg';\r\n");
      out.write("                const isLt2M = file.size / 1024 / 1024 < 2;\r\n");
      out.write("\r\n");
      out.write("                if (!isJPG) {\r\n");
      out.write("                    this.$message.error('上传头像图片只能是 JPG 格式!');\r\n");
      out.write("                }\r\n");
      out.write("                if (!isLt2M) {\r\n");
      out.write("                    this.$message.error('上传头像图片大小不能超过 2MB!');\r\n");
      out.write("                }\r\n");
      out.write("                return isJPG && isLt2M;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    })\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
